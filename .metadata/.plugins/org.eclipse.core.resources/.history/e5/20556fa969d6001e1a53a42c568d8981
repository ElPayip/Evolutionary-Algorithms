package modelo.cruce;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import modelo.genes.Gen;
import modelo.genes.GenBinario;
import utils.Pair;
import vista.ConfigPanel.Option;

public class CruceMonopunto<T> implements Cruce<T> {

	@Override
	public Pair<List<? extends Gen<T>>, List<? extends Gen<T>>> cruzar(
			List<? extends Gen<T>> crom1, List<? extends Gen<T>> crom2) {
		
		List<GenBinario<T>> hijo1 = new ArrayList<>(), 
				hijo2 = new ArrayList<>();
		try {
			hijo1.addAll((List<GenBinario<T>>) crom1);
			hijo2.addAll((List<GenBinario<T>>) crom2);
		} catch (ClassCastException e) {
			throw new IllegalArgumentException("CruceMonopuntoBin debe aplicarse sobre GenBinario");
		}
		
		int len = hijo1.size();
		int punto = (int) (new Random().nextDouble() * len);
		return null;
	}

	@Override
	public <O> List<Option<O>> getExtraOpts() {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public Cruce<T> clone() {
		return new CruceMonopunto<>();
	}
}
